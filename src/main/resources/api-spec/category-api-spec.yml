openapi: 3.0.0
info:
  title: Category API
  description: API for managing category data
  version: 1.0.0

paths:
  /api/v1/categories:
    get:
      summary: Get all categories
      tags:
        - Categories
      responses:
        '200':
          description: List of all categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponseListDto'
    post:
      summary: Create a new category
      tags:
        - Categories
      requestBody:
        description: Category data to create a new category
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreationDto'
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponseDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /api/v1/categories/{id}:
    get:
      summary: Get category by ID
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the category to retrieve
      responses:
        '200':
          description: Category found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponseDto'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update category by ID
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the category to update
      requestBody:
        description: Updated category data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreationDto'
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponseDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete category by ID
      tags:
        - Categories
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the category to delete
      responses:
        '204':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: null
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CategoryCreationDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          description: Name of the category
        description:
          type: string
          maxLength: 500
          description: Description of the category

    CategoryResponseDto:
      type: object
      properties:
        categoryId:
          type: string
          format: uuid
          description: Unique identifier of the category
        name:
          type: string
          description: Name of the category
        description:
          type: string
          description: Description of the category
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp of the category

    CategoryResponseListDto:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryResponseDto'

    ValidationError:
      type: object
      properties:
        status:
          type: string
          example: "400"
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ParamsViolationDetails'

    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          description: URI reference identifying the error type
        title:
          type: string
          description: A short description of the error
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Detailed description of the error

    ParamsViolationDetails:
      type: object
      properties:
        fieldName:
          type: string
          description: Field where validation error occurred
        reason:
          type: string
          description: Reason for the validation error
